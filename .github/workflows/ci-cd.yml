name: Build push and deploy image

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:

  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  AWS_ROLE: ${{ secrets.AWS_ACTION_ROLE }}
  ECR_REPO_NAME: dev
  IMAGE_TAG: ${{ github.run_number}}


jobs: 
  build: 
    runs-on: ubuntu-latest #github or share runner
    steps:
      - name: clone repo #clone the repo
        uses: actions/checkout@v3  # actions 
      - name: Aws creds config # loging to aws 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_REGION }}             # OIDC  
          aws-region: ${{ env.AWS_REGION }}
      - name: loging to ecr
        uses: aws-actions/amazon-ecr-login@v1
        id: ecr-login
      - name: Build tag and image
        id: build-and-push
        run: | 
            docker build -t ${{ step.ecr-login.outputs.registry}}/${{ env.ECR_REPO_NAME}}:${{env.IMAGE_TAG}} .
            
      - name: Scan docker Images for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ step.ecr-login.outputs.registry}}/${{ env.ECR_REPO_NAME}}:${{env.IMAGE_TAG}}" # Scan the built image
          format: "table"
          exit-code: "1"
          severity: "CRITICAL,HIGH"
          
      - name: Push image to ecr
        run: |
          docker push ${{ steps.ecr-login.outputs.registry}}/${{ env.ECR_REPO_NAME}}:${{env.IMAGE_TAG}}
